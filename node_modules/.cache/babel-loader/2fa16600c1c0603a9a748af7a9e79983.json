{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst carsSlice = createSlice({\n  name: \"cars\",\n  initialState: {\n    searchTerm: \"\",\n    data: []\n  },\n  reducers: {\n    changeSearchTerm(state, action) {\n      state.searchTerm = action.payload;\n    },\n    addCar(state, action) {\n      state.cars.push({\n        // Assumption:\n        // action.payload = { name: '', cost: 140 }\n        name: action.payload.name,\n        cost: action.payload.cost,\n        id: nanoid()\n      });\n    },\n    removeCar(state, action) {\n      // Assumption:\n      // action.payload = the \"id\" of the car we want to remove\n      const updated = state.cars.filter(car => {\n        return car.id !== action.payload;\n      });\n      state.cars = updated;\n    }\n  }\n});\nexport const {\n  changeSearchTerm,\n  addCar,\n  removeCar\n} = carsSlice.actions;\nexport const carsReducer = carsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","carsSlice","name","initialState","searchTerm","data","reducers","changeSearchTerm","state","action","payload","addCar","cars","push","cost","id","removeCar","updated","filter","car","actions","carsReducer","reducer"],"sources":["/Users/mac/Documents/cars/src/store/slices/carSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst carsSlice = createSlice({\n  name: \"cars\",\n  initialState: {\n    searchTerm: \"\",\n    data: [],\n  },\n  reducers: {\n    changeSearchTerm(state, action) {\n      state.searchTerm = action.payload;\n    },\n    addCar(state, action) {\n      state.cars.push({\n        // Assumption:\n        // action.payload = { name: '', cost: 140 }\n        name: action.payload.name,\n        cost: action.payload.cost,\n        id: nanoid(),\n      });\n    },\n    removeCar(state, action) {\n      // Assumption:\n      // action.payload = the \"id\" of the car we want to remove\n      const updated = state.cars.filter((car) => {\n        return car.id !== action.payload;\n      });\n      state.cars = updated;\n    },\n  },\n});\n\nexport const { changeSearchTerm, addCar, removeCar } = carsSlice.actions;\nexport const carsReducer = carsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgB,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9BD,KAAK,CAACJ,UAAU,GAAGK,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,MAAM,CAACH,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACI,IAAI,CAACC,IAAI,CAAC;QACd;QACA;QACAX,IAAI,EAAEO,MAAM,CAACC,OAAO,CAACR,IAAI;QACzBY,IAAI,EAAEL,MAAM,CAACC,OAAO,CAACI,IAAI;QACzBC,EAAE,EAAEf,MAAM;MACZ,CAAC,CAAC;IACJ,CAAC;IACDgB,SAAS,CAACR,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA,MAAMQ,OAAO,GAAGT,KAAK,CAACI,IAAI,CAACM,MAAM,CAAEC,GAAG,IAAK;QACzC,OAAOA,GAAG,CAACJ,EAAE,KAAKN,MAAM,CAACC,OAAO;MAClC,CAAC,CAAC;MACFF,KAAK,CAACI,IAAI,GAAGK,OAAO;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,gBAAgB;EAAEI,MAAM;EAAEK;AAAU,CAAC,GAAGf,SAAS,CAACmB,OAAO;AACxE,OAAO,MAAMC,WAAW,GAAGpB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}